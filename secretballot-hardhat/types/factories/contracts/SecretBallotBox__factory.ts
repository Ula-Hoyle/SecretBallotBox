/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SecretBallotBox,
  SecretBallotBoxInterface,
} from "../../contracts/SecretBallotBox";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "resultPerOption",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "proofHash",
        type: "string",
      },
    ],
    name: "TallyPublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "inputEncryptedChoice",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32[]",
        name: "encryptedOneHot",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "castVoteOneHot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxVotesPerAddress",
        type: "uint32",
      },
    ],
    name: "createBallot",
    outputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getBallot",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "resultPublished",
        type: "bool",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallotCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getBallotStatus",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getEncryptedTally",
    outputs: [
      {
        internalType: "euint32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getEncryptedVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "voteId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ballotId",
            type: "uint256",
          },
          {
            internalType: "euint32",
            name: "encryptedChoice",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
        ],
        internalType: "struct SecretBallotBox.EncryptedVote[]",
        name: "votes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getTallyResult",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ballotId",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "resultPerOption",
            type: "uint32[]",
          },
          {
            internalType: "string",
            name: "proofHash",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct SecretBallotBox.TallyResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
    ],
    name: "getVoteCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "grantTallyDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotId",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "resultPerOption",
        type: "uint32[]",
      },
      {
        internalType: "string",
        name: "proofHash",
        type: "string",
      },
    ],
    name: "submitTallyResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6126f8806101975f395ff3fe608060405234801561000f575f5ffd5b50600436106100da575f3560e01c8063a3cae54011610088578063ba16e36611610063578063ba16e366146101cf578063d616763a146101e2578063da1f12ab146101f5578063f9d5ee75146101fd575f5ffd5b8063a3cae54014610195578063b2c2f2e8146101b5578063b4741495146101c8575f5ffd5b80637445917e116100b85780637445917e1461013d5780637ac53b271461015d5780638589c7a514610182575f5ffd5b80630f010058146100de5780631ec763fa146101075780635a7183281461011c575b5f5ffd5b6100f16100ec366004611e1a565b610223565b6040516100fe9190611e31565b60405180910390f35b61011a610115366004611f28565b6103b5565b005b61012f61012a366004612081565b61067e565b6040519081526020016100fe565b61015061014b366004611e1a565b6108d8565b6040516100fe91906121d3565b61017061016b366004611e1a565b6109e4565b60405160ff90911681526020016100fe565b61011a61019036600461220a565b610abc565b6101a86101a3366004611e1a565b610db4565b6040516100fe9190612287565b61012f6101c3366004611e1a565b610f8f565b5f5461012f565b61011a6101dd366004612323565b611000565b61011a6101f0366004611f28565b61116b565b61271161012f565b61021061020b366004611e1a565b61163d565b6040516100fe979695949392919061235c565b5f8181526002602052604090208054606091839161024090612425565b90505f036102885760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b60448201526064015b60405180910390fd5b5f838152600360205260409020805467ffffffffffffffff8111156102af576102af611fa1565b60405190808252806020026020018201604052801561031057816020015b6102fd60405180608001604052805f81526020015f81526020015f81526020015f6001600160a01b031681525090565b8152602001906001900390816102cd5790505b5092505f5b81548110156103ad5760045f83838154811061033357610333612457565b5f91825260208083209091015483528281019390935260409182019020815160808101835281548152600182015493810193909352600281015491830191909152600301546001600160a01b03166060820152845185908390811061039a5761039a612457565b6020908102919091010152600101610315565b505050919050565b5f85815260026020526040902080548691906103d090612425565b90505f036104135760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f8681526002602052604090206003810154600160401b900467ffffffffffffffff1642116104775760405162461bcd60e51b815260206004820152601060248201526f159bdd1a5b99c81b9bdd08195b99195960821b604482015260640161027f565b6003810154600160801b900460ff16156104d35760405162461bcd60e51b815260206004820152601160248201527f416c7265616479207075626c6973686564000000000000000000000000000000604482015260640161027f565b600281015485146105265760405162461bcd60e51b815260206004820152600f60248201527f4c656e677468206d69736d617463680000000000000000000000000000000000604482015260640161027f565b60405180608001604052808881526020018787808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250505090825250604080516020601f8801819004810282018101909252868152918101919087908790819084018382808284375f92018290525093855250505067ffffffffffffffff421660209283015289815260088252604090208251815582820151805191926105df92600185019290910190611cb8565b50604082015160028201906105f490826124b7565b50606091909101516003918201805467ffffffffffffffff90921667ffffffffffffffff199092169190911790558101805460ff60801b1916600160801b17905560405187907f07777023e13f890bd5734f40f572d50dba59bf364712d02be4b60e87c05397449061066d908990899089908990612572565b60405180910390a250505050505050565b5f5f8751116106cf5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964207469746c6500000000000000000000000000000000000000604482015260640161027f565b6002855110156107215760405162461bcd60e51b815260206004820152601060248201527f4e656564203e3d32206f7074696f6e7300000000000000000000000000000000604482015260640161027f565b8367ffffffffffffffff168367ffffffffffffffff1611801561074d5750428367ffffffffffffffff16115b6107995760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642074696d652077696e646f7700000000000000000000000000604482015260640161027f565b60015f5f8282546107aa91906125f8565b90915550505f805480825260026020526040909120909150806107cd89826124b7565b50600181016107dc88826124b7565b5085516107f29060028301906020890190611d60565b5060038101805460ff60801b1967ffffffffffffffff878116600160401b026fffffffffffffffffffffffffffffffff19909316908916179190911716905560048101805473ffffffffffffffffffffffffffffffffffffffff19163317905563ffffffff8316156108645782610867565b60015b5f8381526006602052604090819020805463ffffffff191663ffffffff939093169290921790915551339083907ffa584d8dae851a26c3c5ba7a234eab61028401878946599197c453d86721691c906108c5908c908a908a9061260b565b60405180910390a3509695505050505050565b5f818152600260205260409020805460609183916108f590612425565b90505f036109385760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f838152600960205260408120805490919067ffffffffffffffff81111561096257610962611fa1565b60405190808252806020026020018201604052801561098b578160200160208202803683370190505b5090505f5b82548110156109d9578281815481106109ab576109ab612457565b905f5260205f2001548282815181106109c6576109c6612457565b6020908102919091010152600101610990565b509250505b50919050565b5f81815260026020526040812080548391906109ff90612425565b90505f03610a425760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f8381526002602052604090206003810154600160801b900460ff1615610a6d5760039250506109de565b600381015467ffffffffffffffff16421015610a8c575f9250506109de565b6003810154600160401b900467ffffffffffffffff164211610ab25760019250506109de565b5060029392505050565b5f8481526002602052604090208054859190610ad790612425565b90505f03610b1a5760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f858152600260205260409020600381015467ffffffffffffffff164210801590610b5a57506003810154600160401b900467ffffffffffffffff164211155b610ba65760405162461bcd60e51b815260206004820152601460248201527f4e6f7420696e20766f74696e672077696e646f77000000000000000000000000604482015260640161027f565b5f610be68686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506118fb92505050565b9050610bf181611911565b50610bfc8133611920565b505f8781526005602090815260408083203384528252808320548a845260069092529091205463ffffffff91821691168110610c7a5760405162461bcd60e51b815260206004820152601360248201527f566f74652071756f746120657863656564656400000000000000000000000000604482015260640161027f565b610c8581600161263e565b5f8981526005602090815260408083203384529091528120805463ffffffff191663ffffffff93909316929092179091556001805490918291610cc99083906125f8565b9091555050600180546040805160808101825282815260208082018d815282840188815233606085019081525f878152600485528681209551865592518589015590516002850155516003938401805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790558d815291815282822080548087018255908352818320018490558c8252600790529081208054929392909190610d789084906125f8565b909155505060405133908a907ff1003b73c437642c0460aee9cd9628b0b8c447b66e6c7c905531b9c644214a11905f90a3505050505050505050565b610de760405180608001604052805f815260200160608152602001606081526020015f67ffffffffffffffff1681525090565b5f8281526002602052604090208054839190610e0290612425565b90505f03610e455760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f8381526008602090815260409182902082516080810184528154815260018201805485518186028101860190965280865291949293858101939290830182828015610ed957602002820191905f5260205f20905f905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610e9c5790505b50505050508152602001600282018054610ef290612425565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1e90612425565b8015610f695780601f10610f4057610100808354040283529160200191610f69565b820191905f5260205f20905b815481529060010190602001808311610f4c57829003601f168201915b50505091835250506003919091015467ffffffffffffffff166020909101529392505050565b5f8181526002602052604081208054839190610faa90612425565b90505f03610fed5760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b50505f9081526007602052604090205490565b5f828152600260205260409020805483919061101b90612425565b90505f0361105e5760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f8381526002602052604090206003810154600160401b900467ffffffffffffffff1642116110c25760405162461bcd60e51b815260206004820152601060248201526f159bdd1a5b99c81b9bdd08195b99195960821b604482015260640161027f565b60048101546001600160a01b0316331461111e5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c7920696e69746961746f72000000000000000000000000000000000000604482015260640161027f565b5f848152600960205260408120905b81548110156111635761115a82828154811061114b5761114b612457565b905f5260205f20015486611920565b5060010161112d565b505050505050565b5f858152600260205260409020805486919061118690612425565b90505f036111c95760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f868152600260205260409020600381015467ffffffffffffffff16421080159061120957506003810154600160401b900467ffffffffffffffff164211155b6112555760405162461bcd60e51b815260206004820152601460248201527f4e6f7420696e20766f74696e672077696e646f77000000000000000000000000604482015260640161027f565b600281015485146112a85760405162461bcd60e51b815260206004820152600d60248201527f6f6e65686f74206c656e67746800000000000000000000000000000000000000604482015260640161027f565b5f8781526005602090815260408083203384528252808320548a845260069092529091205463ffffffff918216911681106113255760405162461bcd60e51b815260206004820152601360248201527f566f74652071756f746120657863656564656400000000000000000000000000604482015260640161027f565b61133081600161263e565b5f8981526005602090815260408083203384529091528120805463ffffffff191663ffffffff93909316929092179091558667ffffffffffffffff81111561137a5761137a611fa1565b6040519080825280602002602001820160405280156113a3578160200160208202803683370190505b5090505f5b8781101561142c576114078989838181106113c5576113c5612457565b9050602002013588888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506118fb92505050565b82828151811061141957611419612457565b60209081029190910101526001016113a8565b505f8981526009602052604081208054909103611491575f5b825181101561148b578183828151811061146157611461612457565b6020908102919091018101518254600181810185555f948552929093209092019190915501611445565b50611551565b81518154146114e25760405162461bcd60e51b815260206004820152601560248201527f74616c6c79206c656e677468206d69736d617463680000000000000000000000604482015260640161027f565b5f5b825181101561154f5761152a82828154811061150257611502612457565b905f5260205f20015484838151811061151d5761151d612457565b6020026020010151611932565b82828154811061153c5761153c612457565b5f918252602090912001556001016114e4565b505b5f5b82518110156115e15761157f82828154811061157157611571612457565b905f5260205f200154611911565b506115b382828154811061159557611595612457565b5f9182526020909120015460048701546001600160a01b0316611920565b506115d88282815481106115c9576115c9612457565b905f5260205f20015433611920565b50600101611553565b505f8a81526007602052604081208054600192906116009084906125f8565b909155505060405133908b907ff1003b73c437642c0460aee9cd9628b0b8c447b66e6c7c905531b9c644214a11905f90a350505050505050505050565b60608060605f5f5f5f8760025f8281526020019081526020015f205f01805461166590612425565b90505f036116a85760405162461bcd60e51b815260206004820152601060248201526f10985b1b1bdd081b9bdd08199bdd5b9960821b604482015260640161027f565b5f8981526002602081905260409091206003810154600482015482549293849360018501939185019267ffffffffffffffff80841693600160401b810490911692600160801b90910460ff16916001600160a01b031690879061170a90612425565b80601f016020809104026020016040519081016040528092919081815260200182805461173690612425565b80156117815780601f1061175857610100808354040283529160200191611781565b820191905f5260205f20905b81548152906001019060200180831161176457829003601f168201915b5050505050965085805461179490612425565b80601f01602080910402602001604051908101604052809291908181526020018280546117c090612425565b801561180b5780601f106117e25761010080835404028352916020019161180b565b820191905f5260205f20905b8154815290600101906020018083116117ee57829003601f168201915b5050505050955084805480602002602001604051908101604052809291908181526020015f905b828210156118da578382905f5260205f2001805461184f90612425565b80601f016020809104026020016040519081016040528092919081815260200182805461187b90612425565b80156118c65780601f1061189d576101008083540402835291602001916118c6565b820191905f5260205f20905b8154815290600101906020018083116118a957829003601f168201915b505050505081526020019060010190611832565b50505050945098509850985098509850985098505050919395979092949650565b5f61190883836004611960565b90505b92915050565b5f61191c8230611a80565b5090565b5f61192b8383611a80565b5090919050565b5f82611944576119415f611b09565b92505b81611955576119525f611b09565b91505b61190883835f611b1b565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b906119d990889033908990899060040161267a565b6020604051808303815f875af11580156119f5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1991906126b9565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611a62575f5ffd5b505af1158015611a74573d5f5f3e3d5ffd5b50505050509392505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015611aee575f5ffd5b505af1158015611b00573d5f5f3e3d5ffd5b50505050505050565b5f61190b8263ffffffff166004611bfb565b5f5f8215611b2e5750600160f81b611b31565b505f5b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af1158015611bcd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bf191906126b9565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90611c7090879087906004016126d0565b6020604051808303815f875af1158015611c8c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cb091906126b9565b949350505050565b828054828255905f5260205f2090600701600890048101928215611d54579160200282015f5b83821115611d2257835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302611cde565b8015611d525782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611d22565b505b5061191c929150611db0565b828054828255905f5260205f20908101928215611da4579160200282015b82811115611da45782518290611d9490826124b7565b5091602001919060010190611d7e565b5061191c929150611dc4565b5b8082111561191c575f8155600101611db1565b8082111561191c575f611dd78282611de0565b50600101611dc4565b508054611dec90612425565b5f825580601f10611dfb575050565b601f0160209004905f5260205f2090810190611e179190611db0565b50565b5f60208284031215611e2a575f5ffd5b5035919050565b602080825282518282018190525f918401906040840190835b81811015611e975783518051845260208101516020850152604081015160408501526001600160a01b03606082015116606085015250608083019250602084019350600181019050611e4a565b509095945050505050565b5f5f83601f840112611eb2575f5ffd5b50813567ffffffffffffffff811115611ec9575f5ffd5b6020830191508360208260051b8501011115611ee3575f5ffd5b9250929050565b5f5f83601f840112611efa575f5ffd5b50813567ffffffffffffffff811115611f11575f5ffd5b602083019150836020828501011115611ee3575f5ffd5b5f5f5f5f5f60608688031215611f3c575f5ffd5b85359450602086013567ffffffffffffffff811115611f59575f5ffd5b611f6588828901611ea2565b909550935050604086013567ffffffffffffffff811115611f84575f5ffd5b611f9088828901611eea565b969995985093965092949392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fde57611fde611fa1565b604052919050565b5f82601f830112611ff5575f5ffd5b813567ffffffffffffffff81111561200f5761200f611fa1565b612022601f8201601f1916602001611fb5565b818152846020838601011115612036575f5ffd5b816020850160208301375f918101602001919091529392505050565b803567ffffffffffffffff81168114612069575f5ffd5b919050565b803563ffffffff81168114612069575f5ffd5b5f5f5f5f5f5f60c08789031215612096575f5ffd5b863567ffffffffffffffff8111156120ac575f5ffd5b6120b889828a01611fe6565b965050602087013567ffffffffffffffff8111156120d4575f5ffd5b6120e089828a01611fe6565b955050604087013567ffffffffffffffff8111156120fc575f5ffd5b8701601f8101891361210c575f5ffd5b803567ffffffffffffffff81111561212657612126611fa1565b8060051b61213660208201611fb5565b9182526020818401810192908101908c841115612151575f5ffd5b6020850192505b8383101561219757823567ffffffffffffffff811115612176575f5ffd5b6121858e602083890101611fe6565b83525060209283019290910190612158565b80985050505050506121ab60608801612052565b92506121b960808801612052565b91506121c760a0880161206e565b90509295509295509295565b602080825282518282018190525f918401906040840190835b81811015611e975783518352602093840193909201916001016121ec565b5f5f5f5f6060858703121561221d575f5ffd5b8435935060208501359250604085013567ffffffffffffffff811115612241575f5ffd5b61224d87828801611eea565b95989497509550505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60208082528251828201528281015160806040840152805160a084018190525f929190910190829060c08501905b808310156122de5763ffffffff84511682526020820191506020840193506001830192506122b5565b506040860151858203601f1901606087015292506122fc8184612259565b92505050606084015161231b608085018267ffffffffffffffff169052565b509392505050565b5f5f60408385031215612334575f5ffd5b8235915060208301356001600160a01b0381168114612351575f5ffd5b809150509250929050565b60e081525f61236e60e083018a612259565b8281036020840152612380818a612259565b9050828103604084015280885180835260208301915060208160051b84010160208b015f5b838110156123d757601f198684030185526123c1838351612259565b60209586019590935091909101906001016123a5565b505067ffffffffffffffff8a16606087015293506123f492505050565b67ffffffffffffffff94909416608082015291151560a08301526001600160a01b031660c090910152949350505050565b600181811c9082168061243957607f821691505b6020821081036109de57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b601f8211156124b257805f5260205f20601f840160051c810160208510156124905750805b601f840160051c820191505b818110156124af575f815560010161249c565b50505b505050565b815167ffffffffffffffff8111156124d1576124d1611fa1565b6124e5816124df8454612425565b8461246b565b6020601f821160018114612517575f83156125005750848201515b5f19600385901b1c1916600184901b1784556124af565b5f84815260208120601f198516915b828110156125465787850151825560209485019460019092019101612526565b508482101561256357868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b604080825281018490525f8560608301825b878110156125af5763ffffffff61259a8461206e565b16825260209283019290910190600101612584565b508381036020850152848152848660208301375f602086830101526020601f19601f8701168201019250505095945050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561190b5761190b6125e4565b606081525f61261d6060830186612259565b67ffffffffffffffff94851660208401529290931660409091015292915050565b63ffffffff818116838216019081111561190b5761190b6125e4565b6054811061267657634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6126a16080830185612259565b90506126b0606083018461265a565b95945050505050565b5f602082840312156126c9575f5ffd5b5051919050565b828152604081016126e4602083018461265a565b939250505056fea164736f6c634300081b000a";

type SecretBallotBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecretBallotBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecretBallotBox__factory extends ContractFactory {
  constructor(...args: SecretBallotBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SecretBallotBox & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SecretBallotBox__factory {
    return super.connect(runner) as SecretBallotBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecretBallotBoxInterface {
    return new Interface(_abi) as SecretBallotBoxInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SecretBallotBox {
    return new Contract(address, _abi, runner) as unknown as SecretBallotBox;
  }
}
